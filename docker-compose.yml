version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongodb:
    image: mongo:5.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  certificat-service:
    build: .
    command: node services/certificatMicroservice.js
    environment:
      MONGO_URI: mongodb://root:example@mongodb:27017
      GRPC_CERTIFICAT_PORT: 50051
    ports:
      - "50051:50051"
    depends_on:
      - mongodb
      - kafka

  competence-service:
    build: .
    command: node services/competenceMicroservice.js
    environment:
      MONGO_URI: mongodb://root:example@mongodb:27017
      GRPC_COMPETENCE_PORT: 50052
    ports:
      - "50052:50052"
    depends_on:
      - mongodb
      - kafka

  api-gateway:
    build: .
    command: node api/apiGateway.js
    environment:
      API_GATEWAY_PORT: 3005
      KAFKA_BROKER: kafka:9092
    ports:
      - "3005:3005"
    depends_on:
      - certificat-service
      - competence-service
      - kafka

  kafka-consumer:
    build: .
    command: node kafka/consumer.js
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

volumes:
  mongodb_data: